---
title: "OpenCV"
author: "Samith Va"
date: "2024-03-23"
categories: [openCV, Deep Learning]
format:
  html:
    code-fold: false
jupyter: python3
---

What is OpenCV?
: OpenCV (Open Source Computer Vision Library) is an open-source computer vision and machine learning software library. It provides a wide range of functionalities for image and video processing. 

Here's a crash course on using OpenCV in Python.

## Installation:
Install OpenCV for Python via pip: `pip install opencv-python`

## Basic Operations
1. Reading and displaying image

```python
import cv2
# Read an image from file
image = cv2.imread('image.jpg')

# Display the image in a window
cv2.imshow('Image', image)

# Wait for a key press and then close the window
cv2.waitKey(0)
cv2.destroyAllWindows()
```

![Output](image.jpg){width=30%}

2. Writing image
```python
import cv2
# Read an image
image = cv2.imread('image.jpg')

# Write the image to a file
cv2.imwrite('output_image.jpg', image)
```
3. Coverting color spaces

OpenCV provides functions to convert images between different color spaces, such as RGB, BGR, HSV, etc.

```python
import cv2
# Read an image
image = cv2.imread('image.jpg')

# Convert BGR to grayscale
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Convert BGR to HSV
hsv_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
cv2.imwrite('gray_image.jpg', gray_image)
cv2.imwrite('hsv_image.jpg', hsv_image)
```
::: {layout-ncol=2 layout-valign="bottom"}
![Grey](gray_image.jpg)

![HSV](hsv_image.jpg)
:::

4. Resizing and Cropping Images

Resize images to a specific width and height or by a scaling factor. Cropping involves selecting a region of interest (ROI) from the image.

```python
import cv2
# Read an image
image = cv2.imread('image.jpg')

# Resize the image to a specific width and height
new_width, new_height = 200, 200
resized_image = cv2.resize(image, (new_width, new_height))

# Resize the image by a scaling factor
scale_percent = 50  # percent of original size
width = int(image.shape[1] * scale_percent / 100)
height = int(image.shape[0] * scale_percent / 100)
resized_image = cv2.resize(image, (width, height))
cv2.imwrite('resized.jpg', resized_image)

# Crop a region of interest (ROI) from the image
x, y, w, h = 100, 100, 200, 200  # Example coordinates and dimensions
cropped_image = image[y:y+h, x:x+w]
cv2.imwrite('cropped.jpg', cropped_image)

```

::: {layout-ncol=2 layout-valign="bottom"}
![Resized](resized.jpg)

![Cropped](cropped.jpg)
:::


5. Reading and Displaying Videos
```python
import cv2

# Open a video file
cap = cv2.VideoCapture('video.mp4')

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break
    cv2.imshow('Video', frame)
    if cv2.waitKey(25) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()

```


Fore more reference, visit [OpenCV Documentation](https://docs.opencv.org/4.x/index.html)


